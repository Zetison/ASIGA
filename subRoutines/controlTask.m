function task = controlTask(task)

formulation = task.misc.formulation;
scatteringCase = task.misc.scatteringCase;
method = task.misc.method;

if strcmp(method,'PML') && isnan(task.pml.t)
    error('The PML thickness pml.t must be set')
end
if strcmp(task.misc.method,'BEM') && ~task.misc.solveForPtot && ~strcmp(task.misc.BC,'NBC')...
        && ~strcmp(task.applyLoad,'radialPulsation')
    warning('It is reccomended to use solveForPtot = true for BEM')
end
if task.misc.solveForPtot && ~strcmp(task.misc.applyLoad,'planeWave')
    error('p_inc does not solve the interior problem in the case applyLoad=radialPulsation. For this reason one must have solveForPtot=false here.')
end
    

if strcmp(method, 'BEM') && ~(strcmp(formulation, 'CCBIE') || strcmp(formulation, 'GCBIE') || ...
                              strcmp(formulation, 'CHBIE') || strcmp(formulation, 'GHBIE') ||  ...
                              strcmp(formulation, 'CBM') || strcmp(formulation, 'GBM') || ...
                              strcmp(formulation, 'CRCBIE1') || strcmp(formulation, 'GRCBIE1') || ...
                              strcmp(formulation, 'CRCBIE2') || strcmp(formulation, 'GRCBIE2') || ...
                              strcmp(formulation, 'CRCBIE3') || strcmp(formulation, 'GRCBIE3') || ...
                              strcmp(formulation, 'CCBIEC') || strcmp(formulation, 'GCBIEC') || ...
                              strcmp(formulation, 'CHBIEC') || strcmp(formulation, 'GHBIEC') ||  ...
                              strcmp(formulation, 'CBMC') || strcmp(formulation, 'GBMC') || ...
                              strcmp(formulation, 'CRCBIE1C') || strcmp(formulation, 'GRCBIE1C') || ...
                              strcmp(formulation, 'CRCBIE2C') || strcmp(formulation, 'GRCBIE2C') || ...
                              strcmp(formulation, 'CRCBIE3C') || strcmp(formulation, 'GRCBIE3C'))
	error(['The only "formulation"s available for "method = BEM" are CCBIE, CHBIE, CBM, GCBIE, GHBIE, GBM, '...
                'CRCBIE1, CRCBIE2, CRCBIE3, GRCBIE1, GRCBIE2 and GRCBIE3'])
end
if (strcmp(method, 'IE') || strcmp(method, 'IENSG')) && ~(strcmp(formulation, 'PGU') || ...
                             strcmp(formulation, 'BGU') || ...
                             strcmp(formulation, 'PGC') || ...
                             strcmp(formulation, 'BGC') || ...
                             strcmp(formulation, 'WBGC') || ...
                             strcmp(formulation, 'WBGU'))
	error('The only "formulation"s available for "method = IE" or method = IENSG are PGU, BGU, PGC, BGC, WBGC and WBGU')
end
if strcmp(method, 'PML') && ~(strcmp(formulation, 'GSB') || strcmp(formulation, 'STD'))
	error('The only "formulation"s available for "method = PML" is GSB (STD is only implemented for testing purposes)')
end
if strcmp(method,'BA') && strcmp(scatteringCase,'MS')
    error('This is case is not implemented. The best approximation method must be combined with "scatteringCase = BI"')
end
if strcmp(method,'PML') && isnan(task.pml.C) && task.rom.useROM
    error('C is not set: C cannot be frequency dependent when using ROM')
end
task.misc.storeFullVarCol = task.misc.storeFullVarCol || task.rom.useROM;





