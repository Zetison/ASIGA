<deployment-project plugin="plugin.apptool" plugin-version="1.0">
  <configuration build-checksum="608644724" file="/home/zetison/kode/ASIGA/surface2volume.prj" location="/home/zetison/kode/ASIGA" name="surface2volume" target="target.mlapps" target-name="Package App">
    <param.appname>surface2volume</param.appname>
    <param.authnamewatermark>Jon Vegard Ven√•s</param.authnamewatermark>
    <param.email>jonvegard.venas@sintef.no</param.email>
    <param.company>SINTEF</param.company>
    <param.icon />
    <param.icons />
    <param.summary>Visualize NURBS geometries and build volumetric mesh from surface mesh.</param.summary>
    <param.description />
    <param.screenshot>/tmp/tpde32d951_6eb4_4ba6_a13a_617bbd4ac70a.png</param.screenshot>
    <param.version>1.0</param.version>
    <param.products.name />
    <param.products.id />
    <param.products.version />
    <param.platforms />
    <param.output>${PROJECT_ROOT}</param.output>
    <param.guid>7a0431b6-6cfb-42fb-aa26-fc4dfd168416</param.guid>
    <unset>
      <param.icon />
      <param.icons />
      <param.description />
      <param.version />
      <param.products.name />
      <param.products.id />
      <param.products.version />
      <param.platforms />
      <param.output />
    </unset>
    <fileset.main>
      <file>${PROJECT_ROOT}/surface2volume.mlapp</file>
    </fileset.main>
    <fileset.depfun>
      <file>${PROJECT_ROOT}/IGAfunctions/getJacobian.m</file>
      <file>${PROJECT_ROOT}/NURBS/BsplineBasis.m</file>
      <file>${PROJECT_ROOT}/NURBS/BsplineBasis.m</file>
      <file>${PROJECT_ROOT}/NURBS/GordonHall.m</file>
      <file>${PROJECT_ROOT}/NURBS/NURBSbasis.m</file>
      <file>${PROJECT_ROOT}/NURBS/NURBSbasis.m</file>
      <file>${PROJECT_ROOT}/NURBS/NURBShasZeroMeasure.m</file>
      <file>${PROJECT_ROOT}/NURBS/NURBSisEqual.m</file>
      <file>${PROJECT_ROOT}/NURBS/NURBSprojection.m</file>
      <file>${PROJECT_ROOT}/NURBS/checkOrientation.m</file>
      <file>${PROJECT_ROOT}/NURBS/cleanNURBS.m</file>
      <file>${PROJECT_ROOT}/NURBS/createNURBSobject.m</file>
      <file>${PROJECT_ROOT}/NURBS/createTopologyMap.m</file>
      <file>${PROJECT_ROOT}/NURBS/elevateBsplinesDegree.m</file>
      <file>${PROJECT_ROOT}/NURBS/elevateNURBSdegree.m</file>
      <file>${PROJECT_ROOT}/NURBS/ensure3DNURBS.m</file>
      <file>${PROJECT_ROOT}/NURBS/evalNURBSloc.m</file>
      <file>${PROJECT_ROOT}/NURBS/evaluateNURBS.m</file>
      <file>${PROJECT_ROOT}/NURBS/evaluateNURBS.m</file>
      <file>${PROJECT_ROOT}/NURBS/extractFreeSurface.m</file>
      <file>${PROJECT_ROOT}/NURBS/findKnotSpan.m</file>
      <file>${PROJECT_ROOT}/NURBS/findKnotSpan.m</file>
      <file>${PROJECT_ROOT}/NURBS/flipNURBSparametrization.m</file>
      <file>${PROJECT_ROOT}/NURBS/getTopology.m</file>
      <file>${PROJECT_ROOT}/NURBS/homogenizeNURBSparametrization.m</file>
      <file>${PROJECT_ROOT}/NURBS/insertKnotsInBsplines.m</file>
      <file>${PROJECT_ROOT}/NURBS/insertKnotsInNURBS.m</file>
      <file>${PROJECT_ROOT}/NURBS/knotRepetitions.m</file>
      <file>${PROJECT_ROOT}/NURBS/loftNURBS.m</file>
      <file>${PROJECT_ROOT}/NURBS/makeUniformNURBSDegree.m</file>
      <file>${PROJECT_ROOT}/NURBS/meanRatioJacobian.m</file>
      <file>${PROJECT_ROOT}/NURBS/orientNURBS.m</file>
      <file>${PROJECT_ROOT}/NURBS/permuteNURBS.m</file>
      <file>${PROJECT_ROOT}/NURBS/plotNURBS.m</file>
      <file>${PROJECT_ROOT}/NURBS/read_g2.m</file>
      <file>${PROJECT_ROOT}/NURBS/revolveNURBS.m</file>
      <file>${PROJECT_ROOT}/NURBS/rotateNURBS.m</file>
      <file>${PROJECT_ROOT}/NURBS/scaleNURBS.m</file>
      <file>${PROJECT_ROOT}/NURBS/subNURBS.m</file>
      <file>${PROJECT_ROOT}/NURBS/surfaceToVolume.m</file>
      <file>${PROJECT_ROOT}/NURBS/translateNURBS.m</file>
      <file>${PROJECT_ROOT}/NURBSgeometries/BCAdata/BeTSSi_BCA_p2_unRefined.mat</file>
      <file>${PROJECT_ROOT}/NURBSgeometries/getArcData.m</file>
      <file>${PROJECT_ROOT}/NURBSgeometries/getEllipsoidData.m</file>
      <file>${PROJECT_ROOT}/NURBSgeometries/getPrismData.m</file>
      <file>${PROJECT_ROOT}/utils/aveknt.m</file>
      <file>${PROJECT_ROOT}/utils/explodeNURBS.m</file>
      <file>${PROJECT_ROOT}/utils/getColor.m</file>
      <file>${PROJECT_ROOT}/utils/getOrientPerms.m</file>
      <file>${PROJECT_ROOT}/utils/getView.m</file>
      <file>${PROJECT_ROOT}/utils/insertUniform.m</file>
      <file>${PROJECT_ROOT}/utils/insertUniform2.m</file>
      <file>${PROJECT_ROOT}/utils/linspace2.m</file>
      <file>${PROJECT_ROOT}/utils/matrixArrayProd.m</file>
      <file>${PROJECT_ROOT}/utils/rotationMatrix.m</file>
      <file>${PROJECT_ROOT}/utils/setdiffUnique.m</file>
      <file>${PROJECT_ROOT}/utils/slc.m</file>
      <file>${PROJECT_ROOT}/utils/strctCp.m</file>
      <file>${PROJECT_ROOT}/utils/subasgnArr.m</file>
      <file>/home/zetison/kode/e3Dss/utils/norm2.m</file>
      <file>/home/zetison/kode/e3Dss/utils/orthogonalTransform.m</file>
      <file>/home/zetison/kode/e3Dss/utils/updateOptions.m</file>
    </fileset.depfun>
    <fileset.resources />
    <fileset.package />
    <build-deliverables>
      <file location="/home/zetison/kode" name="ASIGA" optional="false">/home/zetison/kode/ASIGA</file>
    </build-deliverables>
    <workflow />
    <matlab>
      <root>/home/zetison/programs/matlab_2022a</root>
      <toolboxes>
        <toolbox name="matlabcoder" />
        <toolbox name="embeddedcoder" />
        <toolbox name="gpucoder" />
        <toolbox name="fixedpoint" />
        <toolbox name="matlabhdlcoder" />
        <toolbox name="neuralnetwork" />
      </toolboxes>
      <toolbox>
        <matlabcoder>
          <enabled>true</enabled>
        </matlabcoder>
      </toolbox>
      <toolbox>
        <embeddedcoder>
          <enabled>true</enabled>
        </embeddedcoder>
      </toolbox>
      <toolbox>
        <gpucoder>
          <enabled>true</enabled>
        </gpucoder>
      </toolbox>
      <toolbox>
        <fixedpoint>
          <enabled>true</enabled>
        </fixedpoint>
      </toolbox>
      <toolbox>
        <matlabhdlcoder>
          <enabled>true</enabled>
        </matlabhdlcoder>
      </toolbox>
      <toolbox>
        <neuralnetwork>
          <enabled>true</enabled>
        </neuralnetwork>
      </toolbox>
    </matlab>
    <platform>
      <unix>true</unix>
      <mac>false</mac>
      <windows>false</windows>
      <win2k>false</win2k>
      <winxp>false</winxp>
      <vista>false</vista>
      <linux>true</linux>
      <solaris>false</solaris>
      <osver>5.15.0-76-generic</osver>
      <os32>false</os32>
      <os64>true</os64>
      <arch>glnxa64</arch>
      <matlab>true</matlab>
    </platform>
  </configuration>
</deployment-project>